# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI for API and UI tests

on:
  push:
    branches: [ "default" ]
  pull_request:
    branches: [ "default" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
          if mysqladmin ping -h "127.0.0.1" -u root -proot --silent; then
          echo "MySQL is up!"
          break
          fi
          echo "Waiting for MySQL..."
          sleep 2
          done

      - name: Create test database and schema
        run: |
          mysql -h 127.0.0.1 -u root -proot < ./db/src/test/resources/scripts/init_test_db.sql

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Playwright dependencies
        run: npx playwright install-deps

      - name: Install Java project artifact
        run: |
          mvn clean install -DskipTests=true     

      - name: Run DB tests
        run: |
          cd db
          mvn clean test    

      - name: Run API tests
        run: |
          cd api
          mvn clean test

      - name: Run Selenide UI tests
        run: |
          cd ui
          mvn clean test    

      - name: Run Playwright UI tests
        run: |
          cd ui-playwright
          mvn clean test